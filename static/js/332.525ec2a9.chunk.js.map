{"version":3,"file":"static/js/332.525ec2a9.chunk.js","mappings":"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","sources":["layout/Layout/index.tsx","features/currencyList/currencyListSelects.ts","components/ErrorMessage/Error429.tsx","components/ErrorMessage/index.tsx","components/CurrencyList/Cell/utils.tsx","components/CurrencyList/Cell/CellEdit.tsx","components/CurrencyList/Cell/Cell.tsx","components/CurrencyList/Cell/index.tsx","components/CurrencyList/CurrencyTable.tsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/CurrencyList/utils.tsx","components/CurrencyList/TopToolbar.tsx","components/CurrencyList/index.tsx","hooks/UseEffectOnce.tsx","features/currencyCounter/currencyCounterSelects.ts","features/currencyCounter/currencyCounterActions.ts","components/CurrencyInput/utils.tsx","components/CurrencyInput/CurrencyDropDown.tsx","components/CurrencyInput/events.tsx","components/CurrencyInput/index.tsx","components/ExchangeCounter/events.tsx","components/ExchangeCounter/index.tsx","components/ExchangeCounter/utils.tsx","pages/Home/index.tsx"],"sourcesContent":["import React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Layout = ({ children }: Props): JSX.Element => {\n  return <section className=\"exchange_layout container-fluid\">{children}</section>;\n};\n\nexport default Layout;\n","import { RootStateT } from '../../store/rootReducer';\nimport { ErrorData, LoadingStatus } from '../_common/types';\nimport { ChangedCurrency, Currency } from '../currency/currencyTypes';\n\nexport const selectCurrencyList = (state: RootStateT): Array<Currency> => state.currencyList.data;\n\nexport const selectCurrencyListCCY = (state: RootStateT): Array<string> =>\n  state.currencyList.data.map((currency) => currency.ccy);\n\nexport const selectCurrencyListStatus = (state: RootStateT): LoadingStatus =>\n  state.currencyList.status;\n\nexport const selectCurrencyListErrorStatus = (state: RootStateT): ErrorData =>\n  state.currencyList.error;\n\nexport const selectCurrencyListFocusedCell = (state: RootStateT): string =>\n  state.currencyList.focusedCell;\n\nexport const selectChangedCurrency = (state: RootStateT): ChangedCurrency | null =>\n  state.currencyList.changedCurrency;\n\nexport const selectEditTypeError = (state: RootStateT): boolean => state.currencyList.editTypeError;\n\nexport const selectEditValueError = (state: RootStateT): boolean =>\n  state.currencyList.editValueError;\n","import { ErrorData } from '../../features/_common/types';\n\ntype Props = {\n  errorData: ErrorData;\n};\n\nconst Error429: React.FC<Props> = (props: Props) => {\n  const { errorData } = props;\n  const { statusText, data } = errorData;\n\n  return (\n    <section className=\"error-429\">\n      <h2 className=\"error-header\">{statusText}</h2>\n      <span>{data}</span>\n      <span>Try to reload page.</span>\n    </section>\n  );\n};\n\nexport default Error429;\n","import { ErrorData } from '../../features/_common/types';\nimport Error429 from './Error429';\n\ntype Props = {\n  errorData: ErrorData;\n};\n\nconst errorDetails = (errorData: ErrorData) => {\n  switch (errorData.status) {\n    case 429:\n      return <Error429 errorData={errorData} />;\n    default:\n      return null;\n  }\n};\n\nconst ErrorMessage: React.FC<Props> = (props: Props) => {\n  const { errorData } = props;\n\n  return (\n    <section className=\"exchange_error\">\n      <span className=\"error-default\">Oops! Something went wrong.</span>\n      {errorDetails(errorData)}\n    </section>\n  );\n};\n\nexport default ErrorMessage;\n","import store from '../../../store';\nimport {\n  clearEditState,\n  setEditError,\n  setFocusedCell,\n  setNewCurrencyValue\n} from '../../../features/currencyList/currencyListActions';\nimport {\n  CheckAllowedValue,\n  CheckAllowedType,\n  CloseClick,\n  DisableSaveBtn,\n  EditClick,\n  InputChange,\n  SaveClick\n} from './types';\n\nconst disableSaveBtn = (props: DisableSaveBtn) => {\n  const { inputEl, disabled } = props;\n  const saveBtn = inputEl\n    .closest('.exchange_cell-edit-group')\n    ?.querySelector('.btn-outline-primary') as HTMLButtonElement;\n\n  if (!saveBtn) return;\n  saveBtn.disabled = disabled;\n\n  return;\n};\n\nconst checkAllowedValue = (props: CheckAllowedValue) => {\n  const { newValue, initValue } = props;\n\n  const maxDiff = newValue / 10;\n  const diff = Math.abs(newValue - Number(initValue));\n  const notAllowedRange = diff > maxDiff;\n\n  store.dispatch(setEditError({ editErrorType: 'editValueError', value: notAllowedRange }));\n  return notAllowedRange;\n};\n\nconst checkAllowedType = (props: CheckAllowedType) => {\n  const { inputEl } = props;\n  const notAllowedType = !inputEl.checkValidity();\n\n  store.dispatch(setEditError({ editErrorType: 'editTypeError', value: notAllowedType }));\n  return notAllowedType;\n};\n\nexport const inputChange = (props: InputChange) => {\n  const { event, initValue, setText } = props;\n\n  if (!event.target) return;\n  const inputEl = event.target as HTMLInputElement;\n  const newValue = inputEl.value;\n  const notAllowedDiff = checkAllowedValue({\n    inputEl,\n    newValue: Number(newValue),\n    initValue: Number(initValue)\n  });\n  const notAllowedSymbols = checkAllowedType({ inputEl });\n\n  setText(newValue);\n  disableSaveBtn({ inputEl, disabled: notAllowedDiff || notAllowedSymbols });\n\n  return;\n};\n\nexport const editClick = (props: EditClick) => {\n  const { id, initText, setText } = props;\n\n  setText(initText);\n  store.dispatch(setFocusedCell(id));\n\n  return;\n};\n\nexport const saveClick = (props: SaveClick) => {\n  const { text, ccy, exchangeType, onChange } = props;\n\n  if (onChange) onChange(text);\n  store.dispatch(setNewCurrencyValue({ ccy, [exchangeType]: text }));\n  store.dispatch(clearEditState());\n\n  return;\n};\n\nexport const closeClick = (props: CloseClick) => {\n  const { initText, setText } = props;\n\n  setText(initText);\n  store.dispatch(clearEditState());\n\n  return;\n};\n","import { ExchangeType } from '../../../features/currency/currencyTypes';\nimport { closeClick, inputChange, saveClick } from './utils';\n\nexport type CellEditProps = {\n  initText: string;\n  text: string;\n  ccy: string;\n  exchangeType: ExchangeType;\n  setText: (newText: string) => void;\n  onChange: (newValue: string) => void;\n};\n\nconst CellEdit: React.FC<CellEditProps> = (props: CellEditProps) => {\n  const { initText, text, ccy, exchangeType, setText, onChange } = props;\n\n  return (\n    <div className=\"exchange_cell-edit-group\">\n      <input\n        type=\"text\"\n        className=\"cell-input\"\n        value={text}\n        data-testid=\"edit-cell-input\"\n        pattern=\"^\\d*(\\.\\d{0,5})?$\"\n        onChange={(event) => inputChange({ event, initValue: initText, setText })}\n      />\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          data-testid=\"edit-save-btn\"\n          onClick={() => saveClick({ text, ccy, exchangeType, onChange })}\n        >\n          &#10003;\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger\"\n          data-testid=\"edit-close-btn\"\n          onClick={() => closeClick({ initText, setText })}\n        >\n          &#9587;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CellEdit;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ExchangeType } from '../../../features/currency/currencyTypes';\nimport { selectCurrencyListFocusedCell } from '../../../features/currencyList/currencyListSelects';\nimport CellEdit from './CellEdit';\nimport { editClick } from './utils';\n\nexport type CellProps = {\n  value: string;\n  id: string;\n  ccy: string;\n  exchangeType: ExchangeType;\n  onChange: (newValue: string) => void;\n};\n\nconst Cell: React.FC<CellProps> = (props: CellProps) => {\n  const { value = '', id, ccy, exchangeType, onChange } = props;\n\n  const [text, setText] = useState<string>(value);\n\n  const focusedCell = useSelector(selectCurrencyListFocusedCell);\n\n  useEffect(() => {\n    setText(value);\n  }, [value]);\n\n  if (focusedCell === id)\n    return CellEdit({ initText: value, text, ccy, exchangeType, setText, onChange });\n  if (focusedCell !== id)\n    return (\n      <div data-testid=\"table-cell\" onClick={() => editClick({ id, initText: value, setText })}>\n        {text.substring(0, text.indexOf('.') + 3)}\n      </div>\n    );\n  return null;\n};\n\nexport default Cell;\n","import { ExchangeType } from '../../../features/currency/currencyTypes';\nimport Cell from './Cell';\n\ntype Props = {\n  value: string;\n  id: string;\n  ccy: string;\n  exchangeType: ExchangeType;\n};\n\nconst CellWrapper = (props: Props) => {\n  const { value, id, ccy, exchangeType } = props;\n  let cellValue = value;\n\n  return (\n    <td className=\"cur-value-col text-center\" data-editable=\"true\">\n      <Cell\n        value={cellValue}\n        id={id}\n        ccy={ccy}\n        exchangeType={exchangeType}\n        onChange={(newValue: string) => (cellValue = newValue)}\n      />\n    </td>\n  );\n};\n\nexport default CellWrapper;\n","import { useSelector } from 'react-redux';\nimport { Currency } from '../../features/currency/currencyTypes';\nimport {\n  selectEditTypeError,\n  selectEditValueError\n} from '../../features/currencyList/currencyListSelects';\nimport CellWrapper from './Cell';\n\ntype Props = {\n  currencyList: Array<Currency>;\n};\n\nconst CurrencyTable: React.FC<Props> = (props: Props) => {\n  const { currencyList } = props;\n  const typeErrorMessage = '* Numbers with a max of five decimal places are allowed.';\n  const valueErrorMessage = '* Possible range of change +/- 10% from the initial value';\n\n  const editTypeError = useSelector(selectEditTypeError);\n  const editValueError = useSelector(selectEditValueError);\n\n  return (\n    <table className=\"exchange_table table table-bordered table-hover table-fixed\">\n      <thead className=\"table-dark\">\n        <tr>\n          <th scope=\"col\" className=\"cur-name-col text-center\">\n            Currency/Current Date\n          </th>\n          <th scope=\"col\" className=\"cur-value-col text-center\">\n            Buy\n          </th>\n          <th scope=\"col\" className=\"cur-value-col text-center\">\n            Sell\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {currencyList.map((currency: Currency) => {\n          const { ccy, buy, sale } = currency;\n          return (\n            <tr key={ccy}>\n              <th scope=\"row\" className=\"text-center\">\n                {ccy}/UAH\n              </th>\n              <CellWrapper value={buy} id={ccy + 'ToBuy'} ccy={ccy} exchangeType=\"buy\" />\n              <CellWrapper value={sale} id={ccy + 'ToSale'} ccy={ccy} exchangeType=\"sale\" />\n            </tr>\n          );\n        })}\n      </tbody>\n      <tfoot>\n        <tr>\n          <td colSpan={3}>\n            <div className=\"error-validation\">\n              {editTypeError ? typeErrorMessage : ''}\n              {editValueError ? valueErrorMessage : ''}\n            </div>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  );\n};\n\nexport default CurrencyTable;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import {\n  getCurrencyListFailed,\n  getCurrencyListRequest\n} from '../../features/currencyList/currencyListActions';\nimport store from '../../store';\n\nexport const getCurrencyData = async () => {\n  const error429 = proceed429Error();\n\n  if (!error429) store.dispatch(getCurrencyListRequest());\n\n  return;\n};\n\nexport const proceed429Error = () => {\n  const errorVal = 'Error429';\n  const error429Count = Number(localStorage.getItem(errorVal)) || 0;\n\n  if (error429Count === 4) {\n    const error = {\n      data: 'Too many attempts to load data.',\n      status: 429,\n      statusText: 'Too many attempts'\n    };\n    store.dispatch(getCurrencyListFailed(error));\n    localStorage.removeItem(errorVal);\n\n    return true;\n  }\n\n  localStorage.setItem('Error429', JSON.stringify(error429Count + 1));\n\n  return false;\n};\n","import { getCurrencyData } from './utils';\n\nconst TopToolbar = () => {\n  return (\n    <button\n      className=\"currency-list_reload-btn exchange_btn btn btn-dark\"\n      data-toggle=\"tooltip\"\n      data-placement=\"top\"\n      title=\"Reload currency data\"\n      onClick={getCurrencyData}\n    >\n      &#8635;\n    </button>\n  );\n};\n\nexport default TopToolbar;\n","import { useSelector } from 'react-redux';\nimport {\n  selectCurrencyList,\n  selectCurrencyListErrorStatus,\n  selectCurrencyListStatus\n} from '../../features/currencyList/currencyListSelects';\nimport Container from '../../layout/Container';\nimport ErrorMessage from '../ErrorMessage';\nimport Loader from '../icons/Loader';\nimport CurrencyTable from './CurrencyTable';\nimport { useEffectOnce } from '../../hooks/UseEffectOnce';\nimport { getCurrencyData } from './utils';\nimport TopToolbar from './TopToolbar';\n\nconst CurrencyList = () => {\n  const currencyList = useSelector(selectCurrencyList);\n  const currencyListStatus = useSelector(selectCurrencyListStatus);\n  const currencyListErrorStatus = useSelector(selectCurrencyListErrorStatus);\n\n  useEffectOnce(() => {\n    getCurrencyData();\n  });\n\n  return (\n    <Container classList=\"currency-list\">\n      {currencyListStatus === 'loading' && <Loader />}\n      {currencyListStatus === 'success' && <TopToolbar />}\n      {currencyListStatus === 'success' && <CurrencyTable currencyList={currencyList} />}\n      {currencyListStatus === 'failed' && <ErrorMessage errorData={currencyListErrorStatus} />}\n    </Container>\n  );\n};\n\nexport default CurrencyList;\n","import { useEffect, useRef, useState } from 'react';\n\nexport const useEffectOnce = (effect: () => void | (() => void)) => {\n  const destroyFunc = useRef<void | (() => void)>();\n  const effectCalled = useRef(false);\n  const renderAfterCalled = useRef(false);\n  const [val, setVal] = useState<number>(0);\n\n  if (effectCalled.current) {\n    renderAfterCalled.current = true;\n  }\n\n  useEffect(() => {\n    // only execute the effect first time around\n    if (!effectCalled.current) {\n      destroyFunc.current = effect();\n      effectCalled.current = true;\n    }\n\n    // this forces one render after the effect is run\n    setVal((val) => val + 1);\n\n    return () => {\n      if (!renderAfterCalled.current) return;\n      if (destroyFunc.current) destroyFunc.current();\n    };\n  }, []);\n};\n","import { RootStateT } from '../../store/rootReducer';\nimport { CounterCurrency } from './currencyCounterTypes';\n\nexport const selectCurrencyToChangeValue = (state: RootStateT): string =>\n  state.currencyCounter.currencyToChange.value;\n\nexport const selectCurrencyToGetValue = (state: RootStateT): string =>\n  state.currencyCounter.currencyToGet.value;\n\nexport const selectCurrencyToChange = (state: RootStateT): CounterCurrency =>\n  state.currencyCounter.currencyToChange;\n\nexport const selectCurrencyToGet = (state: RootStateT): CounterCurrency =>\n  state.currencyCounter.currencyToGet;\n","import {\n  CurrencyCounterTypes,\n  SET_COUNTER_CURRENCY,\n  SET_COUNTER_CURRENCY_VALUE,\n  CurrencyToChange,\n  CurrencyValueToChange,\n  SWAP_CURRENCIES\n} from './currencyCounterTypes';\n\nexport const setCounterCurrency = (input: CurrencyToChange): CurrencyCounterTypes => ({\n  type: SET_COUNTER_CURRENCY,\n  payload: { currencyToChange: input }\n});\n\nexport const setCounterCurrencyValue = (input: CurrencyValueToChange): CurrencyCounterTypes => ({\n  type: SET_COUNTER_CURRENCY_VALUE,\n  payload: { currencyValueToChange: input }\n});\n\nexport const swapCurrencies = (): CurrencyCounterTypes => ({\n  type: SWAP_CURRENCIES\n});\n","import { setCounterCurrencyValue } from '../../features/currencyCounter/currencyCounterActions';\nimport { CounterCurrency } from '../../features/currencyCounter/currencyCounterTypes';\nimport store from '../../store';\nimport { CalculateCurrencyValue, ChangeCurrencyValue, GetOppositeValue } from './types';\n\n// convert UAH\nconst calculateBase = (props: CalculateCurrencyValue) => {\n  const { amount, stateToChange, stateToGet } = props;\n  const foreignCurrency = stateToChange.name === 'UAH' ? stateToGet : stateToChange;\n  const { buy, sale } = foreignCurrency;\n\n  if (stateToChange.name === 'UAH') return Number(amount) / Number(sale);\n  return Number(amount) * Number(buy);\n};\n\n// double converting\nconst calculateCurValue = (props: CalculateCurrencyValue) => {\n  const { counterInput, amount, stateToChange, stateToGet } = props;\n  const buy = counterInput === 'currencyToChange' ? stateToChange.buy : stateToGet.buy;\n  const sale = counterInput === 'currencyToChange' ? stateToGet.sale : stateToChange.sale;\n\n  return (Number(amount) * Number(buy)) / Number(sale);\n};\n\n// get exchange result amount\nconst getOppositeValue = (props: GetOppositeValue) => {\n  const { counterInput, amount } = props;\n  const stateToChange: CounterCurrency = store.getState().currencyCounter.currencyToChange;\n  const stateToGet: CounterCurrency = store.getState().currencyCounter.currencyToGet;\n\n  if (stateToChange.name === stateToGet.name) return amount;\n  if (stateToChange.name === 'UAH' || stateToGet.name === 'UAH')\n    return calculateBase({ counterInput, amount, stateToChange, stateToGet }).toFixed(4);\n  return calculateCurValue({ counterInput, amount, stateToChange, stateToGet }).toFixed(4);\n};\n\nexport const changeCurrencyValue = (props: ChangeCurrencyValue) => {\n  const { inputEl, counterInput } = props;\n\n  const amount = Number(inputEl.value).toFixed(4);\n  const oppositeInput = counterInput === 'currencyToChange' ? 'currencyToGet' : 'currencyToChange';\n\n  store.dispatch(setCounterCurrencyValue({ counterInputType: counterInput, value: amount }));\n  const oppositeAmount = getOppositeValue({ counterInput, amount });\n\n  store.dispatch(\n    setCounterCurrencyValue({ counterInputType: oppositeInput, value: oppositeAmount })\n  );\n\n  return;\n};\n","import React from 'react';\nimport {\n  CounterCurrency,\n  CounterInputType\n} from '../../features/currencyCounter/currencyCounterTypes';\nimport { currencySelectChange } from './events';\n\ntype Props = {\n  counterInput: CounterInputType;\n  selectedOption: CounterCurrency;\n  currencyListCCY: Array<string>;\n};\n\nconst CurrencyDropDown: React.FC<Props> = (props: Props) => {\n  const { counterInput, selectedOption, currencyListCCY } = props;\n\n  return (\n    <div className=\"input-drop-down input-group-append\">\n      <select\n        className=\"form-select\"\n        aria-label=\"Default select example\"\n        value={selectedOption.name}\n        onChange={(event) => currencySelectChange({ event, counterInput })}\n      >\n        {currencyListCCY.map((ccy) => {\n          return (\n            <option key={ccy} value={ccy}>\n              {ccy}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default CurrencyDropDown;\n","import { Currency } from '../../features/currency/currencyTypes';\nimport { setCounterCurrency } from '../../features/currencyCounter/currencyCounterActions';\nimport store from '../../store';\nimport { CurrencySelectChange, CurrencyValueInputChange } from './types';\nimport { changeCurrencyValue } from './utils';\n\nexport const currencyValueInputChange = (props: CurrencyValueInputChange) => {\n  const { event, counterInput } = props;\n  const inputEl = event.target as HTMLInputElement;\n  changeCurrencyValue({ inputEl, counterInput });\n};\n\nexport const currencySelectChange = (props: CurrencySelectChange) => {\n  const { event, counterInput } = props;\n  const selectEl = event.target as HTMLSelectElement;\n  const inputEl = selectEl\n    .closest('.exchange_counter')\n    ?.querySelector('#currencyToChange') as HTMLInputElement;\n  const selectedValue = selectEl.value;\n  const currencyList = store.getState().currencyList.data;\n  const currencyListWithBase = [\n    { ccy: 'UAH', sale: '1', buy: '1', base_ccy: 'UAH' },\n    ...currencyList\n  ];\n  const selectedCurrencyData = currencyListWithBase.find(\n    (currency: Currency) => currency.ccy === selectedValue\n  );\n  if (!selectedCurrencyData) return;\n  const { ccy, sale, buy } = selectedCurrencyData;\n\n  store.dispatch(\n    setCounterCurrency({\n      counterInputType: counterInput,\n      counterCurrency: { name: ccy, value: '', sale, buy }\n    })\n  );\n  changeCurrencyValue({ counterInput: 'currencyToChange', inputEl });\n};\n","import {\n  CounterCurrency,\n  CounterInputType\n} from '../../features/currencyCounter/currencyCounterTypes';\nimport CurrencyDropDown from './CurrencyDropDown';\nimport { currencyValueInputChange } from './events';\n\ntype Props = {\n  counterInput: CounterInputType;\n  label: string;\n  selectedOption: CounterCurrency;\n  currencyListCCY: Array<string>;\n};\n\nconst CurrencyInput: React.FC<Props> = (props: Props) => {\n  const { label = '', selectedOption, counterInput, currencyListCCY } = props;\n\n  return (\n    <div className=\"input-group\">\n      <div className=\"form-floating mb-3\">\n        <input\n          type=\"text\"\n          className=\"floating-input form-control\"\n          id={counterInput}\n          aria-label={label}\n          name=\"floatingInput\"\n          pattern=\"^\\d*(\\.\\d{0,5})?$\"\n          placeholder={label}\n          value={selectedOption.value}\n          onChange={(event) => currencyValueInputChange({ event, counterInput })}\n        />\n        <label className=\"floating-input-label\" htmlFor=\"floatingInput\">\n          {label}\n        </label>\n      </div>\n      <CurrencyDropDown\n        counterInput={counterInput}\n        selectedOption={selectedOption}\n        currencyListCCY={currencyListCCY}\n      />\n    </div>\n  );\n};\n\nexport default CurrencyInput;\n","import store from '../../store';\nimport { swapCurrencies } from '../../features/currencyCounter/currencyCounterActions';\nimport { SwapBtnClick } from './types';\nimport { changeCurrencyValue } from '../CurrencyInput/utils';\n\nexport const swapBtnClick = (props: SwapBtnClick) => {\n  const { event } = props;\n  const btnEl = event.target as HTMLButtonElement;\n  const inputElToConvert = btnEl\n    .closest('.exchange_counter')\n    ?.querySelector('#currencyToChange') as HTMLInputElement;\n  const isRightArrow = btnEl.value === '8644';\n\n  btnEl.innerHTML = isRightArrow ? '&#8646;' : '&#8644;';\n  btnEl.value = isRightArrow ? '8646' : '8644';\n\n  store.dispatch(swapCurrencies());\n  changeCurrencyValue({ counterInput: 'currencyToChange', inputEl: inputElToConvert });\n\n  return;\n};\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectCurrencyToChange,\n  selectCurrencyToGet\n} from '../../features/currencyCounter/currencyCounterSelects';\nimport {\n  selectChangedCurrency,\n  selectCurrencyList,\n  selectCurrencyListStatus\n} from '../../features/currencyList/currencyListSelects';\nimport Container from '../../layout/Container';\nimport CurrencyInput from '../CurrencyInput';\nimport { swapBtnClick } from './events';\nimport { checkForChanges, setInitCurrencyValues } from './utils';\n\nconst ExchangeCounter = () => {\n  const [currencyListCCY, setCurrencyListCCY] = useState<Array<string>>([]);\n\n  const currencyListStatus = useSelector(selectCurrencyListStatus);\n  const currencyList = useSelector(selectCurrencyList);\n  const selectedCurToChange = useSelector(selectCurrencyToChange);\n  const selectedCurToGet = useSelector(selectCurrencyToGet);\n  const changedCurrency = useSelector(selectChangedCurrency);\n\n  useEffect(() => {\n    if (!currencyList.length || currencyListCCY.length) return;\n    const { base_ccy } = currencyList[0];\n    const ccyList = currencyList.map((currency) => currency.ccy);\n\n    setInitCurrencyValues({ selectedCurToGet, firstForeignCurrency: currencyList[0] });\n    setCurrencyListCCY([base_ccy, ...ccyList]);\n  }, [currencyList]);\n\n  // convert currency if value in table was changed\n  useEffect(() => {\n    checkForChanges({ changedCurrency, selectedCurToChange, selectedCurToGet });\n  }, [changedCurrency]);\n\n  return (\n    <Container>\n      {currencyListStatus === 'success' && (\n        <section className=\"exchange_counter\">\n          <CurrencyInput\n            label=\"Change\"\n            counterInput=\"currencyToChange\"\n            selectedOption={selectedCurToChange}\n            currencyListCCY={currencyListCCY}\n          />\n          <button\n            type=\"button\"\n            className=\"exchange_btn btn-swap btn btn-dark\"\n            onClick={(event) => swapBtnClick({ event })}\n            value=\"8644\"\n          >\n            &#8644;\n          </button>\n          <CurrencyInput\n            label=\"Get\"\n            counterInput=\"currencyToGet\"\n            selectedOption={selectedCurToGet}\n            currencyListCCY={currencyListCCY}\n          />\n        </section>\n      )}\n    </Container>\n  );\n};\n\nexport default ExchangeCounter;\n","import { setCounterCurrency } from '../../features/currencyCounter/currencyCounterActions';\nimport { CounterInputType } from '../../features/currencyCounter/currencyCounterTypes';\nimport store from '../../store';\nimport { changeCurrencyValue } from '../CurrencyInput/utils';\nimport { CheckForChanges, SetInitCurrencyValues } from './types';\n\nexport const setInitCurrencyValues = (props: SetInitCurrencyValues) => {\n  const { selectedCurToGet, firstForeignCurrency } = props;\n  if (selectedCurToGet.name) return;\n  const { ccy, buy, sale } = firstForeignCurrency;\n  const curToGet = {\n    name: ccy,\n    buy,\n    sale,\n    value: (1 / Number(sale)).toFixed(4)\n  };\n\n  store.dispatch(\n    setCounterCurrency({\n      counterInputType: 'currencyToGet',\n      counterCurrency: curToGet\n    })\n  );\n\n  return;\n};\n\nexport const checkForChanges = (props: CheckForChanges) => {\n  const { changedCurrency, selectedCurToChange, selectedCurToGet } = props;\n\n  // return if no changes\n  if (!changedCurrency) return;\n  const { ccy, sale, buy } = changedCurrency;\n  const prevCurValues = selectedCurToChange.name === ccy ? selectedCurToChange : selectedCurToGet;\n  // return if changes do NOT affect calculations\n  if (prevCurValues.name !== changedCurrency.ccy) return;\n\n  const counterTypeToChange: CounterInputType =\n    selectedCurToChange.name === ccy ? 'currencyToChange' : 'currencyToGet';\n  const inputEl = document.querySelector(`#currencyToChange`) as HTMLInputElement;\n\n  store.dispatch(\n    setCounterCurrency({\n      counterInputType: counterTypeToChange,\n      counterCurrency: {\n        ...prevCurValues,\n        sale: sale || prevCurValues.sale,\n        buy: buy || prevCurValues.buy\n      }\n    })\n  );\n  changeCurrencyValue({ counterInput: 'currencyToChange', inputEl });\n\n  return;\n};\n","import CurrencyTable from '../../components/CurrencyList';\nimport ExchangeCounter from '../../components/ExchangeCounter';\nimport Layout from '../../layout/Layout';\n\nconst Home: React.FC = () => {\n  return (\n    <Layout>\n      <div className=\"exchange_home-page row\">\n        <CurrencyTable />\n        <ExchangeCounter />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n"],"names":["children","className","selectCurrencyList","state","currencyList","data","selectCurrencyListStatus","status","selectCurrencyListErrorStatus","error","selectCurrencyListFocusedCell","focusedCell","selectChangedCurrency","changedCurrency","selectEditTypeError","editTypeError","selectEditValueError","editValueError","props","errorData","statusText","errorDetails","inputChange","event","initValue","setText","target","inputEl","newValue","value","notAllowedDiff","maxDiff","notAllowedRange","Math","abs","Number","store","setEditError","editErrorType","checkAllowedValue","notAllowedSymbols","notAllowedType","checkValidity","checkAllowedType","disabled","saveBtn","closest","querySelector","disableSaveBtn","initText","text","ccy","exchangeType","onChange","type","pattern","onClick","setNewCurrencyValue","clearEditState","saveClick","closeClick","id","useState","useSelector","useEffect","CellEdit","setFocusedCell","editClick","substring","indexOf","cellValue","scope","map","currency","buy","sale","colSpan","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","getCurrencyData","fn","proceed429Error","getCurrencyListRequest","self","this","args","arguments","apply","err","undefined","errorVal","error429Count","localStorage","getItem","getCurrencyListFailed","removeItem","setItem","JSON","stringify","title","currencyListStatus","currencyListErrorStatus","effect","destroyFunc","useRef","effectCalled","renderAfterCalled","setVal","current","val","useEffectOnce","Container","classList","Loader","selectCurrencyToChange","currencyCounter","currencyToChange","selectCurrencyToGet","currencyToGet","setCounterCurrency","input","SET_COUNTER_CURRENCY","payload","setCounterCurrencyValue","SET_COUNTER_CURRENCY_VALUE","currencyValueToChange","getOppositeValue","counterInput","amount","stateToChange","stateToGet","name","foreignCurrency","calculateBase","toFixed","calculateCurValue","changeCurrencyValue","oppositeInput","counterInputType","oppositeAmount","selectedOption","currencyListCCY","selectEl","selectedValue","selectedCurrencyData","base_ccy","find","counterCurrency","currencySelectChange","label","placeholder","currencyValueInputChange","htmlFor","swapBtnClick","btnEl","inputElToConvert","isRightArrow","innerHTML","SWAP_CURRENCIES","setCurrencyListCCY","selectedCurToChange","selectedCurToGet","length","ccyList","firstForeignCurrency","curToGet","setInitCurrencyValues","prevCurValues","counterTypeToChange","document","checkForChanges","Layout"],"sourceRoot":""}